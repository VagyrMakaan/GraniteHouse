@model GraniteHouse.Models.ViewModel.AppointmentDetailsViewModel
@using GraniteHouse.Extensions
@using GraniteHouse.Utility

@{
    ViewData["Title"] = "Edit";
}

<br />
<h2 class="text-info">Edit Appointment</h2>

<form method="post" enctype="multipart/form-data">
    <div class="p-4 border rounded row">
        <input hidden asp-for="Appointment.Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-6">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerName"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.CustomerName" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerEmail"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.CustomerEmail" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.CustomerEmail" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.CustomerPhoneNumber"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.CustomerPhoneNumber" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.CustomerPhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.AppointmentDate"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.AppointmentDate" id="DatePicker" type="text" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.AppointmentDate" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.AppointmentTime"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.AppointmentTime" id="TimePicker" type="text" class="form-control" />
                </div>
                <span asp-validation-for="Appointment.AppointmentTime" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.SalesPerson"></label>
                </div>
                <div class="col-8">
                    @if (User.IsInRole(SD.AdminEndUser))
                    {
                        <input asp-for="@Model.Appointment.SalesPerson.Name" readonly class="form-control" />
                        <input asp-for="@Model.Appointment.SalesPersonId" hidden />
                    }
                    else
                    {
                        <select asp-for="@Model.Appointment.SalesPersonId" asp-items="Model.SalesPerson.ToSelectListItemString(Model.Appointment.SalesPersonId)" class="form-control"></select>
                    }
                    </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointment.IsConfirmed"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointment.IsConfirmed" type="checkbox" class="form-control" />
                </div>
            </div>
        </div>

        <div class="col-6">
            <partial name="~/Views/Shared/_AppointmentProductDetails.cshtml" model="Model.Products" />
        </div>

        <br />
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Update" />
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    </div>
</form>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        $(function () {
            // Initialize datepicker
            $('#DatePicker').datepicker({
                dateFormat: 'yy-mm-dd',
                minDate: '+1',
                maxDate: '+3M'
            });

            // Initiate timepicker
            $('#TimePicker').timepicker({
                timeFormat: 'HH:mm',
                interval: 30,
                minTime: '8:00am',
                maxTime: '6:00pm',
                defaultTime: '8:00am',
                startTime: '8:00am',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });

            // WTF?!!! Srsly???
            // Is there an easier way, to format a date in the onload-method and pass it already prepared to the form?

            $(document).ready(function () {
                var appointmentDate = document.getElementById('DatePicker').value;
                var splitData = "";

                if (appointmentDate.indexOf(" ") > 0) {
                    splitData = appointmentDate.split(" ");
                } else {
                    splitData = appointmentDate.split("T");
                }

                var time = splitData[1].substring(0, 5);
                if (time.slice(-1) == ":") {
                    time = time.substring(0, time.length - 1);
                }
                
                $('#DatePicker').datepicker("setDate", toDate(splitData[0]));
                $('#TimePicker').timepicker("setTime", time);
            });

            function toDate(dateStr) {
                var parts = dateStr.split(".");
                return new Date(parts[2], parts[1] - 1, parts[0]);
            }
        });
    </script>
}